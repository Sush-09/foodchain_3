{
	"id": "6dc562a118d6c48e958c9254a8f0d41f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"access/ManufacturerRole.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Roles.sol\";\r\nimport \"../utils/Context.sol\";\r\n\r\n// Define a contract 'ManufacturerRole' to manage this role - add, remove, check\r\ncontract ManufacturerRole is Context {\r\n    using Roles for Roles.Role;\r\n\r\n    // Define 2 events, one for Adding, and other for Removing\r\n    event ManufacturerAdded(address indexed account);\r\n    event ManufacturerRemoved(address indexed account);\r\n\r\n    // Define a struct 'Manufacturers' by inheriting from 'Roles' library, struct Role\r\n    Roles.Role private Manufacturers;\r\n\r\n    // In the constructor make the address that deploys this contract the 1st Manufacturer\r\n    constructor() public {\r\n        _addManufacturer(_msgSender());\r\n    }\r\n\r\n    // Define a modifier that checks to see if _msgSender() has the appropriate role\r\n    modifier onlyManufacturer() {\r\n        require(isManufacturer(_msgSender()));\r\n        _;\r\n    }\r\n\r\n    // Define a function 'isManufacturer' to check this role\r\n    function isManufacturer(address account) public view returns (bool) {\r\n        return Manufacturers.has(account);\r\n    }\r\n\r\n    // Define a function 'addManufacturer' that adds this role\r\n    function addManufacturer(address account) public onlyManufacturer {\r\n        _addManufacturer(account);\r\n    }\r\n\r\n    // Define a function 'renounceManufacturer' to renounce this role\r\n    function renounceManufacturer() public {\r\n        _removeManufacturer(_msgSender());\r\n    }\r\n\r\n    // Define an internal function '_addManufacturer' to add this role, called by 'addManufacturer'\r\n    function _addManufacturer(address account) internal {\r\n        Manufacturers.add(account);\r\n        emit ManufacturerAdded(account);\r\n    }\r\n\r\n    // Define an internal function '_removeManufacturer' to remove this role, called by 'removeManufacturer'\r\n    function _removeManufacturer(address account) internal {\r\n        Manufacturers.remove(account);\r\n        emit ManufacturerRemoved(account);\r\n    }\r\n}"
			},
			"utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}"
			},
			"access/Roles.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title Roles\r\n * @dev Library for managing addresses assigned to a Role.\r\n */\r\nlibrary Roles {\r\n    struct Role {\r\n        mapping(address => bool) bearer;\r\n    }\r\n\r\n    /**\r\n     * @dev give an account access to this role\r\n     */\r\n    function add(Role storage role, address account) internal {\r\n        require(account != address(0));\r\n        require(!has(role, account));\r\n\r\n        role.bearer[account] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev remove an account's access to this role\r\n     */\r\n    function remove(Role storage role, address account) internal {\r\n        require(account != address(0));\r\n        require(has(role, account));\r\n\r\n        role.bearer[account] = false;\r\n    }\r\n\r\n    /**\r\n     * @dev check if an account has this role\r\n     * @return bool\r\n     */\r\n    function has(Role storage role, address account)\r\n        internal\r\n        view\r\n        returns (bool)\r\n    {\r\n        require(account != address(0));\r\n        return role.bearer[account];\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"access/ManufacturerRole.sol": {
				"ManufacturerRole": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "ManufacturerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "ManufacturerRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "addManufacturer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isManufacturer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceManufacturer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"access/ManufacturerRole.sol\":199:1995  contract ManufacturerRole is Context {... */\n  mstore(0x40, 0x80)\n    /* \"access/ManufacturerRole.sol\":677:747  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"access/ManufacturerRole.sol\":709:739  _addManufacturer(_msgSender()) */\n  tag_4\n    /* \"access/ManufacturerRole.sol\":726:738  _msgSender() */\n  tag_5\n    /* \"access/ManufacturerRole.sol\":726:736  _msgSender */\n  shl(0x20, tag_6)\n    /* \"access/ManufacturerRole.sol\":726:738  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"access/ManufacturerRole.sol\":709:725  _addManufacturer */\n  shl(0x20, tag_7)\n    /* \"access/ManufacturerRole.sol\":709:739  _addManufacturer(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"access/ManufacturerRole.sol\":199:1995  contract ManufacturerRole is Context {... */\n  jump(tag_8)\n    /* \"utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"utils/Context.sol\":655:662  address */\n  0x00\n    /* \"utils/Context.sol\":682:692  msg.sender */\n  caller\n    /* \"utils/Context.sol\":675:692  return msg.sender */\n  swap1\n  pop\n    /* \"utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"access/ManufacturerRole.sol\":1588:1727  function _addManufacturer(address account) internal {... */\ntag_7:\n    /* \"access/ManufacturerRole.sol\":1651:1677  Manufacturers.add(account) */\n  tag_11\n    /* \"access/ManufacturerRole.sol\":1669:1676  account */\n  dup2\n    /* \"access/ManufacturerRole.sol\":1651:1664  Manufacturers */\n  0x00\n    /* \"access/ManufacturerRole.sol\":1651:1668  Manufacturers.add */\n  or(tag_0_17, shl(0x20, tag_12))\n  swap1\n    /* \"access/ManufacturerRole.sol\":1651:1677  Manufacturers.add(account) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"access/ManufacturerRole.sol\":1711:1718  account */\n  dup1\n    /* \"access/ManufacturerRole.sol\":1693:1719  ManufacturerAdded(account) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c1278\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log2\n    /* \"access/ManufacturerRole.sol\":1588:1727  function _addManufacturer(address account) internal {... */\n  pop\n  jump\t// out\n    /* \"access/Roles.sol\":305:491  function add(Role storage role, address account) internal {... */\ntag_12:\n    /* \"access/Roles.sol\":401:402  0 */\n  0x00\n    /* \"access/Roles.sol\":382:403  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"access/Roles.sol\":382:389  account */\n  dup2\n    /* \"access/Roles.sol\":382:403  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"access/Roles.sol\":374:404  require(account != address(0)) */\n  tag_14\n  jumpi\n  0x00\n  dup1\n  revert\ntag_14:\n    /* \"access/Roles.sol\":424:442  has(role, account) */\n  tag_15\n    /* \"access/Roles.sol\":428:432  role */\n  dup3\n    /* \"access/Roles.sol\":434:441  account */\n  dup3\n    /* \"access/Roles.sol\":424:427  has */\n  shl(0x20, tag_16)\n    /* \"access/Roles.sol\":424:442  has(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"access/Roles.sol\":423:442  !has(role, account) */\n  iszero\n    /* \"access/Roles.sol\":415:443  require(!has(role, account)) */\n  tag_17\n  jumpi\n  0x00\n  dup1\n  revert\ntag_17:\n    /* \"access/Roles.sol\":479:483  true */\n  0x01\n    /* \"access/Roles.sol\":456:460  role */\n  dup3\n    /* \"access/Roles.sol\":456:467  role.bearer */\n  0x00\n  add\n    /* \"access/Roles.sol\":456:476  role.bearer[account] */\n  0x00\n    /* \"access/Roles.sol\":468:475  account */\n  dup4\n    /* \"access/Roles.sol\":456:476  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"access/Roles.sol\":456:483  role.bearer[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"access/Roles.sol\":305:491  function add(Role storage role, address account) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"access/Roles.sol\":853:1050  function has(Role storage role, address account)... */\ntag_16:\n    /* \"access/Roles.sol\":952:956  bool */\n  0x00\n    /* \"access/Roles.sol\":1001:1002  0 */\n  dup1\n    /* \"access/Roles.sol\":982:1003  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"access/Roles.sol\":982:989  account */\n  dup3\n    /* \"access/Roles.sol\":982:1003  account != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"access/Roles.sol\":974:1004  require(account != address(0)) */\n  tag_19\n  jumpi\n  0x00\n  dup1\n  revert\ntag_19:\n    /* \"access/Roles.sol\":1022:1026  role */\n  dup3\n    /* \"access/Roles.sol\":1022:1033  role.bearer */\n  0x00\n  add\n    /* \"access/Roles.sol\":1022:1042  role.bearer[account] */\n  0x00\n    /* \"access/Roles.sol\":1034:1041  account */\n  dup4\n    /* \"access/Roles.sol\":1022:1042  role.bearer[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"access/Roles.sol\":1015:1042  return role.bearer[account] */\n  swap1\n  pop\n    /* \"access/Roles.sol\":853:1050  function has(Role storage role, address account)... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"access/ManufacturerRole.sol\":199:1995  contract ManufacturerRole is Context {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"access/ManufacturerRole.sol\":199:1995  contract ManufacturerRole is Context {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x17d4a491\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5f8a5afa\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xde07f34e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"access/ManufacturerRole.sol\":1007:1127  function isManufacturer(address account) public view returns (bool) {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"access/ManufacturerRole.sol\":1199:1309  function addManufacturer(address account) public onlyManufacturer {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"access/ManufacturerRole.sol\":1388:1479  function renounceManufacturer() public {... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"access/ManufacturerRole.sol\":1007:1127  function isManufacturer(address account) public view returns (bool) {... */\n    tag_9:\n        /* \"access/ManufacturerRole.sol\":1069:1073  bool */\n      0x00\n        /* \"access/ManufacturerRole.sol\":1093:1119  Manufacturers.has(account) */\n      tag_19\n        /* \"access/ManufacturerRole.sol\":1111:1118  account */\n      dup3\n        /* \"access/ManufacturerRole.sol\":1093:1106  Manufacturers */\n      0x00\n        /* \"access/ManufacturerRole.sol\":1093:1110  Manufacturers.has */\n      tag_20\n      swap1\n        /* \"access/ManufacturerRole.sol\":1093:1119  Manufacturers.has(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_19:\n        /* \"access/ManufacturerRole.sol\":1086:1119  return Manufacturers.has(account) */\n      swap1\n      pop\n        /* \"access/ManufacturerRole.sol\":1007:1127  function isManufacturer(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"access/ManufacturerRole.sol\":1199:1309  function addManufacturer(address account) public onlyManufacturer {... */\n    tag_14:\n        /* \"access/ManufacturerRole.sol\":888:916  isManufacturer(_msgSender()) */\n      tag_22\n        /* \"access/ManufacturerRole.sol\":903:915  _msgSender() */\n      tag_23\n        /* \"access/ManufacturerRole.sol\":903:913  _msgSender */\n      tag_24\n        /* \"access/ManufacturerRole.sol\":903:915  _msgSender() */\n      jump\t// in\n    tag_23:\n        /* \"access/ManufacturerRole.sol\":888:902  isManufacturer */\n      tag_9\n        /* \"access/ManufacturerRole.sol\":888:916  isManufacturer(_msgSender()) */\n      jump\t// in\n    tag_22:\n        /* \"access/ManufacturerRole.sol\":880:917  require(isManufacturer(_msgSender())) */\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n        /* \"access/ManufacturerRole.sol\":1276:1301  _addManufacturer(account) */\n      tag_27\n        /* \"access/ManufacturerRole.sol\":1293:1300  account */\n      dup2\n        /* \"access/ManufacturerRole.sol\":1276:1292  _addManufacturer */\n      tag_28\n        /* \"access/ManufacturerRole.sol\":1276:1301  _addManufacturer(account) */\n      jump\t// in\n    tag_27:\n        /* \"access/ManufacturerRole.sol\":1199:1309  function addManufacturer(address account) public onlyManufacturer {... */\n      pop\n      jump\t// out\n        /* \"access/ManufacturerRole.sol\":1388:1479  function renounceManufacturer() public {... */\n    tag_16:\n        /* \"access/ManufacturerRole.sol\":1438:1471  _removeManufacturer(_msgSender()) */\n      tag_30\n        /* \"access/ManufacturerRole.sol\":1458:1470  _msgSender() */\n      tag_31\n        /* \"access/ManufacturerRole.sol\":1458:1468  _msgSender */\n      tag_24\n        /* \"access/ManufacturerRole.sol\":1458:1470  _msgSender() */\n      jump\t// in\n    tag_31:\n        /* \"access/ManufacturerRole.sol\":1438:1457  _removeManufacturer */\n      tag_32\n        /* \"access/ManufacturerRole.sol\":1438:1471  _removeManufacturer(_msgSender()) */\n      jump\t// in\n    tag_30:\n        /* \"access/ManufacturerRole.sol\":1388:1479  function renounceManufacturer() public {... */\n      jump\t// out\n        /* \"access/Roles.sol\":305:491  function add(Role storage role, address account) internal {... */\n    tag_17:\n        /* \"access/Roles.sol\":401:402  0 */\n      0x00\n        /* \"access/Roles.sol\":382:403  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Roles.sol\":382:389  account */\n      dup2\n        /* \"access/Roles.sol\":382:403  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"access/Roles.sol\":374:404  require(account != address(0)) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"access/Roles.sol\":424:442  has(role, account) */\n      tag_35\n        /* \"access/Roles.sol\":428:432  role */\n      dup3\n        /* \"access/Roles.sol\":434:441  account */\n      dup3\n        /* \"access/Roles.sol\":424:427  has */\n      tag_20\n        /* \"access/Roles.sol\":424:442  has(role, account) */\n      jump\t// in\n    tag_35:\n        /* \"access/Roles.sol\":423:442  !has(role, account) */\n      iszero\n        /* \"access/Roles.sol\":415:443  require(!has(role, account)) */\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n        /* \"access/Roles.sol\":479:483  true */\n      0x01\n        /* \"access/Roles.sol\":456:460  role */\n      dup3\n        /* \"access/Roles.sol\":456:467  role.bearer */\n      0x00\n      add\n        /* \"access/Roles.sol\":456:476  role.bearer[account] */\n      0x00\n        /* \"access/Roles.sol\":468:475  account */\n      dup4\n        /* \"access/Roles.sol\":456:476  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"access/Roles.sol\":456:483  role.bearer[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"access/Roles.sol\":305:491  function add(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"access/Roles.sol\":853:1050  function has(Role storage role, address account)... */\n    tag_20:\n        /* \"access/Roles.sol\":952:956  bool */\n      0x00\n        /* \"access/Roles.sol\":1001:1002  0 */\n      dup1\n        /* \"access/Roles.sol\":982:1003  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Roles.sol\":982:989  account */\n      dup3\n        /* \"access/Roles.sol\":982:1003  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"access/Roles.sol\":974:1004  require(account != address(0)) */\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n        /* \"access/Roles.sol\":1022:1026  role */\n      dup3\n        /* \"access/Roles.sol\":1022:1033  role.bearer */\n      0x00\n      add\n        /* \"access/Roles.sol\":1022:1042  role.bearer[account] */\n      0x00\n        /* \"access/Roles.sol\":1034:1041  account */\n      dup4\n        /* \"access/Roles.sol\":1022:1042  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"access/Roles.sol\":1015:1042  return role.bearer[account] */\n      swap1\n      pop\n        /* \"access/Roles.sol\":853:1050  function has(Role storage role, address account)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\n    tag_24:\n        /* \"utils/Context.sol\":655:662  address */\n      0x00\n        /* \"utils/Context.sol\":682:692  msg.sender */\n      caller\n        /* \"utils/Context.sol\":675:692  return msg.sender */\n      swap1\n      pop\n        /* \"utils/Context.sol\":602:700  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"access/ManufacturerRole.sol\":1588:1727  function _addManufacturer(address account) internal {... */\n    tag_28:\n        /* \"access/ManufacturerRole.sol\":1651:1677  Manufacturers.add(account) */\n      tag_41\n        /* \"access/ManufacturerRole.sol\":1669:1676  account */\n      dup2\n        /* \"access/ManufacturerRole.sol\":1651:1664  Manufacturers */\n      0x00\n        /* \"access/ManufacturerRole.sol\":1651:1668  Manufacturers.add */\n      tag_17\n      swap1\n        /* \"access/ManufacturerRole.sol\":1651:1677  Manufacturers.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_41:\n        /* \"access/ManufacturerRole.sol\":1711:1718  account */\n      dup1\n        /* \"access/ManufacturerRole.sol\":1693:1719  ManufacturerAdded(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c1278\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"access/ManufacturerRole.sol\":1588:1727  function _addManufacturer(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"access/ManufacturerRole.sol\":1845:1992  function _removeManufacturer(address account) internal {... */\n    tag_32:\n        /* \"access/ManufacturerRole.sol\":1911:1940  Manufacturers.remove(account) */\n      tag_43\n        /* \"access/ManufacturerRole.sol\":1932:1939  account */\n      dup2\n        /* \"access/ManufacturerRole.sol\":1911:1924  Manufacturers */\n      0x00\n        /* \"access/ManufacturerRole.sol\":1911:1931  Manufacturers.remove */\n      tag_44\n      swap1\n        /* \"access/ManufacturerRole.sol\":1911:1940  Manufacturers.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_43:\n        /* \"access/ManufacturerRole.sol\":1976:1983  account */\n      dup1\n        /* \"access/ManufacturerRole.sol\":1956:1984  ManufacturerRemoved(account) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2fed5abf6a80d6dfe30b4895481b2fc5d7dce5f8f7b931832f4a2947d5040c7f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"access/ManufacturerRole.sol\":1845:1992  function _removeManufacturer(address account) internal {... */\n      pop\n      jump\t// out\n        /* \"access/Roles.sol\":570:759  function remove(Role storage role, address account) internal {... */\n    tag_44:\n        /* \"access/Roles.sol\":669:670  0 */\n      0x00\n        /* \"access/Roles.sol\":650:671  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"access/Roles.sol\":650:657  account */\n      dup2\n        /* \"access/Roles.sol\":650:671  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"access/Roles.sol\":642:672  require(account != address(0)) */\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n        /* \"access/Roles.sol\":691:709  has(role, account) */\n      tag_47\n        /* \"access/Roles.sol\":695:699  role */\n      dup3\n        /* \"access/Roles.sol\":701:708  account */\n      dup3\n        /* \"access/Roles.sol\":691:694  has */\n      tag_20\n        /* \"access/Roles.sol\":691:709  has(role, account) */\n      jump\t// in\n    tag_47:\n        /* \"access/Roles.sol\":683:710  require(has(role, account)) */\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n        /* \"access/Roles.sol\":746:751  false */\n      0x00\n        /* \"access/Roles.sol\":723:727  role */\n      dup3\n        /* \"access/Roles.sol\":723:734  role.bearer */\n      0x00\n      add\n        /* \"access/Roles.sol\":723:743  role.bearer[account] */\n      0x00\n        /* \"access/Roles.sol\":735:742  account */\n      dup4\n        /* \"access/Roles.sol\":723:743  role.bearer[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"access/Roles.sol\":723:751  role.bearer[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"access/Roles.sol\":570:759  function remove(Role storage role, address account) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_50:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_52:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_53:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_64\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_52\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_54:\n        /* \"#utility.yul\":641:665   */\n      tag_66\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_53\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_67\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_67:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_55:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_69\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_54\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_8:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_72\n      tag_50\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":917:1036   */\n    tag_71:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_73\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_55\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_56:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_57:\n        /* \"#utility.yul\":1353:1374   */\n      tag_76\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_56\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_11:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_78\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_57\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122078896675cfc2426a2715b88d1c5a72f053a6d49490655dda2ca501c94fc8133664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_addManufacturer_90": {
									"entryPoint": 58,
									"id": 90,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_223": {
									"entryPoint": 50,
									"id": 223,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@add_150": {
									"entryPoint": 152,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_210": {
									"entryPoint": 329,
									"id": 210,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6101da565b600033905090565b61005281600061009860201b6100f01790919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c127860405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100d157600080fd5b6100e1828261014960201b60201c565b156100eb57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361018357600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61048e806101e96000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806317d4a491146100465780635f8a5afa14610076578063de07f34e14610092575b600080fd5b610060600480360381019061005b91906103f5565b61009c565b60405161006d919061043d565b60405180910390f35b610090600480360381019061008b91906103f5565b6100b9565b005b61009a6100de565b005b60006100b282600061019b90919063ffffffff16565b9050919050565b6100c96100c461022c565b61009c565b6100d257600080fd5b6100db81610234565b50565b6100ee6100e961022c565b61028e565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361012957600080fd5b610133828261019b565b1561013d57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101d557600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b6102488160006100f090919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c127860405160405180910390a250565b6102a28160006102e890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f2fed5abf6a80d6dfe30b4895481b2fc5d7dce5f8f7b931832f4a2947d5040c7f60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361032157600080fd5b61032b828261019b565b61033457600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103c282610397565b9050919050565b6103d2816103b7565b81146103dd57600080fd5b50565b6000813590506103ef816103c9565b92915050565b60006020828403121561040b5761040a610392565b5b6000610419848285016103e0565b91505092915050565b60008115159050919050565b61043781610422565b82525050565b6000602082019050610452600083018461042e565b9291505056fea264697066735822122078896675cfc2426a2715b88d1c5a72f053a6d49490655dda2ca501c94fc8133664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1DA JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x52 DUP2 PUSH1 0x0 PUSH2 0x98 PUSH1 0x20 SHL PUSH2 0xF0 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x561138658CA49A8540DC70DCFE64C9026C1C5B9344642242DD6562970F9C1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE1 DUP3 DUP3 PUSH2 0x149 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x183 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48E DUP1 PUSH2 0x1E9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17D4A491 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5F8A5AFA EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xDE07F34E EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xB2 DUP3 PUSH1 0x0 PUSH2 0x19B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xC4 PUSH2 0x22C JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB DUP2 PUSH2 0x234 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEE PUSH2 0xE9 PUSH2 0x22C JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133 DUP3 DUP3 PUSH2 0x19B JUMP JUMPDEST ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x248 DUP2 PUSH1 0x0 PUSH2 0xF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x561138658CA49A8540DC70DCFE64C9026C1C5B9344642242DD6562970F9C1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2A2 DUP2 PUSH1 0x0 PUSH2 0x2E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2FED5ABF6A80D6DFE30B4895481B2FC5D7DCE5F8F7B931832F4A2947D5040C7F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32B DUP3 DUP3 PUSH2 0x19B JUMP JUMPDEST PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP3 PUSH2 0x397 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D2 DUP2 PUSH2 0x3B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EF DUP2 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40B JUMPI PUSH2 0x40A PUSH2 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x419 DUP5 DUP3 DUP6 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x452 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x896675CFC2426A2715B88D1C5A72F053A6D49490655DDA2CA5 ADD 0xC9 0x4F 0xC8 SGT CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "199:1796:0:-:0;;;677:70;;;;;;;;;;709:30;726:12;:10;;;:12;;:::i;:::-;709:16;;;:30;;:::i;:::-;199:1796;;602:98:2;655:7;682:10;675:17;;602:98;:::o;1588:139:0:-;1651:26;1669:7;1651:13;:17;;;;;;:26;;;;:::i;:::-;1711:7;1693:26;;;;;;;;;;;;1588:139;:::o;305:186:1:-;401:1;382:21;;:7;:21;;;374:30;;;;;;424:18;428:4;434:7;424:3;;;:18;;:::i;:::-;423:19;415:28;;;;;;479:4;456;:11;;:20;468:7;456:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;305:186;;:::o;853:197::-;952:4;1001:1;982:21;;:7;:21;;;974:30;;;;;;1022:4;:11;;:20;1034:7;1022:20;;;;;;;;;;;;;;;;;;;;;;;;;1015:27;;853:197;;;;:::o;199:1796:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_addManufacturer_90": {
									"entryPoint": 564,
									"id": 90,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_223": {
									"entryPoint": 556,
									"id": 223,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_removeManufacturer_106": {
									"entryPoint": 654,
									"id": 106,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addManufacturer_65": {
									"entryPoint": 185,
									"id": 65,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_150": {
									"entryPoint": 240,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@has_210": {
									"entryPoint": 411,
									"id": 210,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isManufacturer_53": {
									"entryPoint": 156,
									"id": 53,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@remove_184": {
									"entryPoint": 744,
									"id": 184,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceManufacturer_74": {
									"entryPoint": 222,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 1085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1600:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:3"
															},
															"nodeType": "YulIf",
															"src": "917:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:3",
														"type": ""
													}
												],
												"src": "841:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1218:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1228:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1200:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1210:7:3",
														"type": ""
													}
												],
												"src": "1176:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1331:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1341:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1326:3:3",
														"type": ""
													}
												],
												"src": "1272:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1479:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1489:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1497:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1525:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1451:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1463:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1474:4:3",
														"type": ""
													}
												],
												"src": "1387:210:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c806317d4a491146100465780635f8a5afa14610076578063de07f34e14610092575b600080fd5b610060600480360381019061005b91906103f5565b61009c565b60405161006d919061043d565b60405180910390f35b610090600480360381019061008b91906103f5565b6100b9565b005b61009a6100de565b005b60006100b282600061019b90919063ffffffff16565b9050919050565b6100c96100c461022c565b61009c565b6100d257600080fd5b6100db81610234565b50565b6100ee6100e961022c565b61028e565b565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361012957600080fd5b610133828261019b565b1561013d57600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101d557600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b6102488160006100f090919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c127860405160405180910390a250565b6102a28160006102e890919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f2fed5abf6a80d6dfe30b4895481b2fc5d7dce5f8f7b931832f4a2947d5040c7f60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361032157600080fd5b61032b828261019b565b61033457600080fd5b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103c282610397565b9050919050565b6103d2816103b7565b81146103dd57600080fd5b50565b6000813590506103ef816103c9565b92915050565b60006020828403121561040b5761040a610392565b5b6000610419848285016103e0565b91505092915050565b60008115159050919050565b61043781610422565b82525050565b6000602082019050610452600083018461042e565b9291505056fea264697066735822122078896675cfc2426a2715b88d1c5a72f053a6d49490655dda2ca501c94fc8133664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x17D4A491 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5F8A5AFA EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xDE07F34E EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x43D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0xB9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9A PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0xB2 DUP3 PUSH1 0x0 PUSH2 0x19B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC9 PUSH2 0xC4 PUSH2 0x22C JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH2 0xD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB DUP2 PUSH2 0x234 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xEE PUSH2 0xE9 PUSH2 0x22C JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133 DUP3 DUP3 PUSH2 0x19B JUMP JUMPDEST ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x248 DUP2 PUSH1 0x0 PUSH2 0xF0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x561138658CA49A8540DC70DCFE64C9026C1C5B9344642242DD6562970F9C1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x2A2 DUP2 PUSH1 0x0 PUSH2 0x2E8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2FED5ABF6A80D6DFE30B4895481B2FC5D7DCE5F8F7B931832F4A2947D5040C7F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32B DUP3 DUP3 PUSH2 0x19B JUMP JUMPDEST PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP3 PUSH2 0x397 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D2 DUP2 PUSH2 0x3B7 JUMP JUMPDEST DUP2 EQ PUSH2 0x3DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3EF DUP2 PUSH2 0x3C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x40B JUMPI PUSH2 0x40A PUSH2 0x392 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x419 DUP5 DUP3 DUP6 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x437 DUP2 PUSH2 0x422 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x452 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x42E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x896675CFC2426A2715B88D1C5A72F053A6D49490655DDA2CA5 ADD 0xC9 0x4F 0xC8 SGT CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "199:1796:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1007:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1199:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1388:91;;;:::i;:::-;;1007:120;1069:4;1093:26;1111:7;1093:13;:17;;:26;;;;:::i;:::-;1086:33;;1007:120;;;:::o;1199:110::-;888:28;903:12;:10;:12::i;:::-;888:14;:28::i;:::-;880:37;;;;;;1276:25:::1;1293:7;1276:16;:25::i;:::-;1199:110:::0;:::o;1388:91::-;1438:33;1458:12;:10;:12::i;:::-;1438:19;:33::i;:::-;1388:91::o;305:186:1:-;401:1;382:21;;:7;:21;;;374:30;;;;;;424:18;428:4;434:7;424:3;:18::i;:::-;423:19;415:28;;;;;;479:4;456;:11;;:20;468:7;456:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;305:186;;:::o;853:197::-;952:4;1001:1;982:21;;:7;:21;;;974:30;;;;;;1022:4;:11;;:20;1034:7;1022:20;;;;;;;;;;;;;;;;;;;;;;;;;1015:27;;853:197;;;;:::o;602:98:2:-;655:7;682:10;675:17;;602:98;:::o;1588:139:0:-;1651:26;1669:7;1651:13;:17;;:26;;;;:::i;:::-;1711:7;1693:26;;;;;;;;;;;;1588:139;:::o;1845:147::-;1911:29;1932:7;1911:13;:20;;:29;;;;:::i;:::-;1976:7;1956:28;;;;;;;;;;;;1845:147;:::o;570:189:1:-;669:1;650:21;;:7;:21;;;642:30;;;;;;691:18;695:4;701:7;691:3;:18::i;:::-;683:27;;;;;;746:5;723:4;:11;;:20;735:7;723:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;570:189;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "233200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addManufacturer(address)": "infinite",
								"isManufacturer(address)": "infinite",
								"renounceManufacturer()": "infinite"
							},
							"internal": {
								"_addManufacturer(address)": "infinite",
								"_removeManufacturer(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 199,
									"end": 1995,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 199,
									"end": 1995,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 199,
									"end": 1995,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 677,
									"end": 747,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 677,
									"end": 747,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 677,
									"end": 747,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 677,
									"end": 747,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 677,
									"end": 747,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 677,
									"end": 747,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 747,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 677,
									"end": 747,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 677,
									"end": 747,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 677,
									"end": 747,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 677,
									"end": 747,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 709,
									"end": 739,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 726,
									"end": 738,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 726,
									"end": 736,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 726,
									"end": 736,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 726,
									"end": 736,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 726,
									"end": 738,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 726,
									"end": 738,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 726,
									"end": 738,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 709,
									"end": 725,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 709,
									"end": 725,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 709,
									"end": 725,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 709,
									"end": 739,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 709,
									"end": 739,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 709,
									"end": 739,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 709,
									"end": 739,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 709,
									"end": 739,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 199,
									"end": 1995,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 199,
									"end": 1995,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 602,
									"end": 700,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 602,
									"end": 700,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 655,
									"end": 662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 682,
									"end": 692,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 675,
									"end": 692,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 675,
									"end": 692,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 602,
									"end": 700,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 602,
									"end": 700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1588,
									"end": 1727,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1588,
									"end": 1727,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1651,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1669,
									"end": 1676,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1651,
									"end": 1664,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1651,
									"end": 1668,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1651,
									"end": 1668,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1651,
									"end": 1668,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1651,
									"end": 1668,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551633"
								},
								{
									"begin": 1651,
									"end": 1668,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1651,
									"end": 1668,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1651,
									"end": 1677,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1651,
									"end": 1677,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1651,
									"end": 1677,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1651,
									"end": 1677,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1651,
									"end": 1677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1651,
									"end": 1677,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1651,
									"end": 1677,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1711,
									"end": 1718,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1719,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1693,
									"end": 1719,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1719,
									"name": "PUSH",
									"source": 0,
									"value": "561138658CA49A8540DC70DCFE64C9026C1C5B9344642242DD6562970F9C1278"
								},
								{
									"begin": 1693,
									"end": 1719,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1693,
									"end": 1719,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1719,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1693,
									"end": 1719,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1719,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1719,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1719,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1719,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1693,
									"end": 1719,
									"name": "LOG2",
									"source": 0
								},
								{
									"begin": 1588,
									"end": 1727,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1588,
									"end": 1727,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 305,
									"end": 491,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 305,
									"end": 491,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 382,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 382,
									"end": 403,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 382,
									"end": 389,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 382,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 382,
									"end": 403,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 382,
									"end": 403,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 374,
									"end": 404,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 374,
									"end": 404,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 374,
									"end": 404,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 374,
									"end": 404,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 374,
									"end": 404,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 374,
									"end": 404,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 374,
									"end": 404,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 424,
									"end": 442,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 428,
									"end": 432,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 434,
									"end": 441,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 424,
									"end": 427,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 424,
									"end": 427,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 424,
									"end": 427,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 424,
									"end": 442,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 424,
									"end": 442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 424,
									"end": 442,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 424,
									"end": 442,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 423,
									"end": 442,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 415,
									"end": 443,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 415,
									"end": 443,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 415,
									"end": 443,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 415,
									"end": 443,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 415,
									"end": 443,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 415,
									"end": 443,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 415,
									"end": 443,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 479,
									"end": 483,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 456,
									"end": 460,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 456,
									"end": 467,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 456,
									"end": 467,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 456,
									"end": 476,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 468,
									"end": 475,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 456,
									"end": 476,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 456,
									"end": 476,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 456,
									"end": 476,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 456,
									"end": 476,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 456,
									"end": 476,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 456,
									"end": 476,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 456,
									"end": 476,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 456,
									"end": 476,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 456,
									"end": 476,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 456,
									"end": 476,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 456,
									"end": 476,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 456,
									"end": 476,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 456,
									"end": 476,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 456,
									"end": 476,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 456,
									"end": 476,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 456,
									"end": 476,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 456,
									"end": 483,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 456,
									"end": 483,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 456,
									"end": 483,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 456,
									"end": 483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 491,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 491,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 305,
									"end": 491,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 853,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 853,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 952,
									"end": 956,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1001,
									"end": 1002,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 982,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 982,
									"end": 1003,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 982,
									"end": 989,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 982,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 982,
									"end": 1003,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 982,
									"end": 1003,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 974,
									"end": 1004,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 974,
									"end": 1004,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 974,
									"end": 1004,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 974,
									"end": 1004,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 974,
									"end": 1004,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 974,
									"end": 1004,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 974,
									"end": 1004,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1026,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1033,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1022,
									"end": 1033,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1034,
									"end": 1041,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1022,
									"end": 1042,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1015,
									"end": 1042,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 853,
									"end": 1050,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 853,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 853,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 853,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 853,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 199,
									"end": 1995,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 199,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 199,
									"end": 1995,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 1995,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 1995,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 1995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 1995,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 199,
									"end": 1995,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 1995,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122078896675cfc2426a2715b88d1c5a72f053a6d49490655dda2ca501c94fc8133664736f6c63430008120033",
									".code": [
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH",
											"source": 0,
											"value": "17D4A491"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH",
											"source": 0,
											"value": "5F8A5AFA"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH",
											"source": 0,
											"value": "DE07F34E"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 1995,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1007,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1007,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1007,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1199,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1199,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1479,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1388,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1388,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1388,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1479,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1388,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1479,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1069,
											"end": 1073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1093,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1093,
											"end": 1110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1119,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1093,
											"end": 1119,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1119,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1093,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1086,
											"end": 1119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1007,
											"end": 1127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 903,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 903,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 903,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 903,
											"end": 915,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 903,
											"end": 915,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 888,
											"end": 902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 888,
											"end": 916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 888,
											"end": 916,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 888,
											"end": 916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 880,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 880,
											"end": 917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 880,
											"end": 917,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 880,
											"end": 917,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 880,
											"end": 917,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 880,
											"end": 917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1293,
											"end": 1300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1276,
											"end": 1301,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1276,
											"end": 1301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1276,
											"end": 1301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1199,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1479,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1388,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1458,
											"end": 1470,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1458,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1458,
											"end": 1470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1458,
											"end": 1470,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1458,
											"end": 1470,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1438,
											"end": 1471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1471,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1438,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1388,
											"end": 1479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 305,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 305,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 402,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 382,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 382,
											"end": 403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 382,
											"end": 389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 382,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 382,
											"end": 403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 382,
											"end": 403,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 374,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 374,
											"end": 404,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 374,
											"end": 404,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 404,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 374,
											"end": 404,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 374,
											"end": 404,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 374,
											"end": 404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 424,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 428,
											"end": 432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 434,
											"end": 441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 424,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 424,
											"end": 442,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 424,
											"end": 442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 423,
											"end": 442,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 415,
											"end": 443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 415,
											"end": 443,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 415,
											"end": 443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 415,
											"end": 443,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 415,
											"end": 443,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 415,
											"end": 443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 479,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 456,
											"end": 460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 456,
											"end": 467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 467,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 468,
											"end": 475,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 456,
											"end": 476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 456,
											"end": 476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 456,
											"end": 476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 456,
											"end": 476,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 476,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 456,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 456,
											"end": 483,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 456,
											"end": 483,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 456,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 305,
											"end": 491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 305,
											"end": 491,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 305,
											"end": 491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 1050,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 952,
											"end": 956,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1002,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1003,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 1003,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 982,
											"end": 989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1003,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 1003,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 982,
											"end": 1003,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 974,
											"end": 1004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 974,
											"end": 1004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1004,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 974,
											"end": 1004,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 974,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1026,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1022,
											"end": 1042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1015,
											"end": 1042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 1050,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 853,
											"end": 1050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 853,
											"end": 1050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 1050,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 1050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 700,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 602,
											"end": 700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 655,
											"end": 662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 682,
											"end": 692,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 675,
											"end": 692,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 675,
											"end": 692,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 602,
											"end": 700,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 602,
											"end": 700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1727,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1588,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1669,
											"end": 1676,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1651,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1651,
											"end": 1668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1651,
											"end": 1677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1711,
											"end": 1718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "PUSH",
											"source": 0,
											"value": "561138658CA49A8540DC70DCFE64C9026C1C5B9344642242DD6562970F9C1278"
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1693,
											"end": 1719,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1727,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1588,
											"end": 1727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1992,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1845,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1932,
											"end": 1939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1911,
											"end": 1924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1911,
											"end": 1931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1911,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1976,
											"end": 1983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1984,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1956,
											"end": 1984,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1984,
											"name": "PUSH",
											"source": 0,
											"value": "2FED5ABF6A80D6DFE30B4895481B2FC5D7DCE5F8F7B931832F4A2947D5040C7F"
										},
										{
											"begin": 1956,
											"end": 1984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1956,
											"end": 1984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1956,
											"end": 1984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1984,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1956,
											"end": 1984,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1845,
											"end": 1992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 570,
											"end": 759,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 570,
											"end": 759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 669,
											"end": 670,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 650,
											"end": 671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 650,
											"end": 657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 650,
											"end": 671,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 650,
											"end": 671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 650,
											"end": 671,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 642,
											"end": 672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 642,
											"end": 672,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 642,
											"end": 672,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 642,
											"end": 672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 695,
											"end": 699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 701,
											"end": 708,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 691,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 691,
											"end": 709,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 683,
											"end": 710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 683,
											"end": 710,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 710,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 683,
											"end": 710,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 683,
											"end": 710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 746,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 723,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 723,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 742,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 723,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 723,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 723,
											"end": 743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 723,
											"end": 743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 723,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 723,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 743,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 723,
											"end": 743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 723,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 723,
											"end": 751,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 723,
											"end": 751,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 723,
											"end": 751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 570,
											"end": 759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"access/ManufacturerRole.sol",
								"access/Roles.sol",
								"utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addManufacturer(address)": "5f8a5afa",
							"isManufacturer(address)": "17d4a491",
							"renounceManufacturer()": "de07f34e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ManufacturerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"ManufacturerRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addManufacturer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isManufacturer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceManufacturer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"access/ManufacturerRole.sol\":\"ManufacturerRole\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"access/ManufacturerRole.sol\":{\"keccak256\":\"0x8a09d373dcc7b8894ab815b9c6ff291f0621f2cea090cf7a7f785fca28303c90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75df4b1b41bd8ee2c7d9bb14a5d058e1ff5365762b6e9869e13a3c34fd9d793a\",\"dweb:/ipfs/QmZbLshPTEZtRC2VYvzoz72WKz8qTCwfmtRatyBDZyQPWC\"]},\"access/Roles.sol\":{\"keccak256\":\"0x2319ad4979af23db4ef914ffaa06a7eff7d3753db226da5bffdfd6e5a094750d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e00d7727b7a325dfb1fb9f9333e693f36024905d863a3e13b157fa1c13173cad\",\"dweb:/ipfs/QmTe4ViFWPtwyfp6yG3FRWdf3DRb8kFMxQMaEeBidx5amq\"]},\"utils/Context.sol\":{\"keccak256\":\"0x851c3d8e30ea37c35947f620812e2e18718ac9312ef8d84b643fc46d94269540\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c02fec97a236e7eda6646bb8aef30a00f134710ffc29f1965c27dc257cc58a3\",\"dweb:/ipfs/QmNoqNHYS9HP9u8J3bG5kVztMNcQ42kYiiiKDN8tY94gvY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 20,
								"contract": "access/ManufacturerRole.sol:ManufacturerRole",
								"label": "Manufacturers",
								"offset": 0,
								"slot": "0",
								"type": "t_struct(Role)115_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(Role)115_storage": {
								"encoding": "inplace",
								"label": "struct Roles.Role",
								"members": [
									{
										"astId": 114,
										"contract": "access/ManufacturerRole.sol:ManufacturerRole",
										"label": "bearer",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									}
								],
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"access/Roles.sol": {
				"Roles": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing addresses assigned to a Role.",
						"kind": "dev",
						"methods": {},
						"title": "Roles",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"access/Roles.sol\":147:1053  library Roles {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"access/Roles.sol\":147:1053  library Roles {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d8b24d26161dfc34e83ed93c6a21aeaef82ce13ccfb4532f4d2c478d2224294064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d8b24d26161dfc34e83ed93c6a21aeaef82ce13ccfb4532f4d2c478d2224294064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xB2 0x4D 0x26 AND SAR 0xFC CALLVALUE 0xE8 RETURNDATACOPY 0xD9 EXTCODECOPY PUSH11 0x21AEAEF82CE13CCFB4532F 0x4D 0x2C SELFBALANCE DUP14 0x22 0x24 0x29 BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "147:906:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d8b24d26161dfc34e83ed93c6a21aeaef82ce13ccfb4532f4d2c478d2224294064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0xB2 0x4D 0x26 AND SAR 0xFC CALLVALUE 0xE8 RETURNDATACOPY 0xD9 EXTCODECOPY PUSH11 0x21AEAEF82CE13CCFB4532F 0x4D 0x2C SELFBALANCE DUP14 0x22 0x24 0x29 BLOCKHASH PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "147:906:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(struct Roles.Role storage pointer,address)": "infinite",
								"has(struct Roles.Role storage pointer,address)": "infinite",
								"remove(struct Roles.Role storage pointer,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 147,
									"end": 1053,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d8b24d26161dfc34e83ed93c6a21aeaef82ce13ccfb4532f4d2c478d2224294064736f6c63430008120033",
									".code": [
										{
											"begin": 147,
											"end": 1053,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 147,
											"end": 1053,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 147,
											"end": 1053,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 147,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 147,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 147,
											"end": 1053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 147,
											"end": 1053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 147,
											"end": 1053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 147,
											"end": 1053,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"access/ManufacturerRole.sol",
								"access/Roles.sol",
								"utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing addresses assigned to a Role.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Roles\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"access/Roles.sol\":\"Roles\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"access/Roles.sol\":{\"keccak256\":\"0x2319ad4979af23db4ef914ffaa06a7eff7d3753db226da5bffdfd6e5a094750d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e00d7727b7a325dfb1fb9f9333e693f36024905d863a3e13b157fa1c13173cad\",\"dweb:/ipfs/QmTe4ViFWPtwyfp6yG3FRWdf3DRb8kFMxQMaEeBidx5amq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"utils/Context.sol\":{\"keccak256\":\"0x851c3d8e30ea37c35947f620812e2e18718ac9312ef8d84b643fc46d94269540\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c02fec97a236e7eda6646bb8aef30a00f134710ffc29f1965c27dc257cc58a3\",\"dweb:/ipfs/QmNoqNHYS9HP9u8J3bG5kVztMNcQ42kYiiiKDN8tY94gvY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> access/ManufacturerRole.sol:19:5:\n   |\n19 |     constructor() public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 747,
					"file": "access/ManufacturerRole.sol",
					"start": 677
				},
				"type": "Warning"
			}
		],
		"sources": {
			"access/ManufacturerRole.sol": {
				"ast": {
					"absolutePath": "access/ManufacturerRole.sol",
					"exportedSymbols": {
						"Context": [
							233
						],
						"ManufacturerRole": [
							107
						],
						"Roles": [
							211
						]
					},
					"id": 108,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "access/Roles.sol",
							"file": "./Roles.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 108,
							"sourceUnit": 212,
							"src": "60:21:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 108,
							"sourceUnit": 234,
							"src": "83:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"228:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 233,
										"src": "228:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "228:7:0"
								}
							],
							"canonicalName": "ManufacturerRole",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 107,
							"linearizedBaseContracts": [
								107,
								233
							],
							"name": "ManufacturerRole",
							"nameLocation": "208:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 9,
									"libraryName": {
										"id": 6,
										"name": "Roles",
										"nameLocations": [
											"249:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 211,
										"src": "249:5:0"
									},
									"nodeType": "UsingForDirective",
									"src": "243:27:0",
									"typeName": {
										"id": 8,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 7,
											"name": "Roles.Role",
											"nameLocations": [
												"259:5:0",
												"265:4:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 115,
											"src": "259:10:0"
										},
										"referencedDeclaration": 115,
										"src": "259:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									}
								},
								{
									"anonymous": false,
									"eventSelector": "561138658ca49a8540dc70dcfe64c9026c1c5b9344642242dd6562970f9c1278",
									"id": 13,
									"name": "ManufacturerAdded",
									"nameLocation": "348:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "366:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "365:25:0"
									},
									"src": "342:49:0"
								},
								{
									"anonymous": false,
									"eventSelector": "2fed5abf6a80d6dfe30b4895481b2fc5d7dce5f8f7b931832f4a2947d5040c7f",
									"id": 17,
									"name": "ManufacturerRemoved",
									"nameLocation": "403:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "439:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "423:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "423:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "422:25:0"
									},
									"src": "397:51:0"
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "Manufacturers",
									"nameLocation": "563:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "544:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Role_$115_storage",
										"typeString": "struct Roles.Role"
									},
									"typeName": {
										"id": 19,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 18,
											"name": "Roles.Role",
											"nameLocations": [
												"544:5:0",
												"550:4:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 115,
											"src": "544:10:0"
										},
										"referencedDeclaration": 115,
										"src": "544:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
											"typeString": "struct Roles.Role"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "698:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 24,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "726:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "726:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 23,
														"name": "_addManufacturer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "709:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "709:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "709:30:0"
											}
										]
									},
									"id": 29,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "688:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "698:0:0"
									},
									"scope": 107,
									"src": "677:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "869:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 33,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "903:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 34,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "903:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 32,
																"name": "isManufacturer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "888:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "888:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 31,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "880:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "880:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "880:37:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "928:1:0"
											}
										]
									},
									"id": 40,
									"name": "onlyManufacturer",
									"nameLocation": "850:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "866:2:0"
									},
									"src": "841:96:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "1075:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 49,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 42,
															"src": "1111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 47,
															"name": "Manufacturers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1093:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$115_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 48,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1107:3:0",
														"memberName": "has",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 210,
														"src": "1093:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$115_storage_ptr_$_t_address_$returns$_t_bool_$attached_to$_t_struct$_Role_$115_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1093:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 51,
												"nodeType": "Return",
												"src": "1086:33:0"
											}
										]
									},
									"functionSelector": "17d4a491",
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isManufacturer",
									"nameLocation": "1016:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1039:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1031:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1030:17:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1069:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1069:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:6:0"
									},
									"scope": 107,
									"src": "1007:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 64,
										"nodeType": "Block",
										"src": "1265:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 61,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "1293:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_addManufacturer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 90,
														"src": "1276:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1276:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "1276:25:0"
											}
										]
									},
									"functionSelector": "5f8a5afa",
									"id": 65,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyManufacturer",
												"nameLocations": [
													"1248:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1248:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1248:16:0"
										}
									],
									"name": "addManufacturer",
									"nameLocation": "1208:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1232:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 65,
												"src": "1224:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1224:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1223:17:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1265:0:0"
									},
									"scope": 107,
									"src": "1199:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "1427:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 69,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "1458:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1458:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 68,
														"name": "_removeManufacturer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "1438:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1438:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "1438:33:0"
											}
										]
									},
									"functionSelector": "de07f34e",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceManufacturer",
									"nameLocation": "1397:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1417:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1427:0:0"
									},
									"scope": 107,
									"src": "1388:91:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1640:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1669:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 79,
															"name": "Manufacturers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1651:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$115_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 81,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1665:3:0",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 150,
														"src": "1651:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$115_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Role_$115_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1651:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1651:26:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 86,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "1711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "ManufacturerAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1693:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1693:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 88,
												"nodeType": "EmitStatement",
												"src": "1688:31:0"
											}
										]
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addManufacturer",
									"nameLocation": "1597:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1622:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1614:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1613:17:0"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1640:0:0"
									},
									"scope": 107,
									"src": "1588:139:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "1900:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 98,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 95,
															"name": "Manufacturers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "1911:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$115_storage",
																"typeString": "struct Roles.Role storage ref"
															}
														},
														"id": 97,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1925:6:0",
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 184,
														"src": "1911:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Role_$115_storage_ptr_$_t_address_$returns$__$attached_to$_t_struct$_Role_$115_storage_ptr_$",
															"typeString": "function (struct Roles.Role storage pointer,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1911:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "1911:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 102,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "1976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "ManufacturerRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "1956:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1956:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "EmitStatement",
												"src": "1951:33:0"
											}
										]
									},
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeManufacturer",
									"nameLocation": "1854:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1882:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1874:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:17:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1900:0:0"
									},
									"scope": 107,
									"src": "1845:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 108,
							"src": "199:1796:0",
							"usedErrors": []
						}
					],
					"src": "33:1962:0"
				},
				"id": 0
			},
			"access/Roles.sol": {
				"ast": {
					"absolutePath": "access/Roles.sol",
					"exportedSymbols": {
						"Roles": [
							211
						]
					},
					"id": 212,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 109,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Roles",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 110,
								"nodeType": "StructuredDocumentation",
								"src": "60:85:1",
								"text": " @title Roles\n @dev Library for managing addresses assigned to a Role."
							},
							"fullyImplemented": true,
							"id": 211,
							"linearizedBaseContracts": [
								211
							],
							"name": "Roles",
							"nameLocation": "155:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Roles.Role",
									"id": 115,
									"members": [
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "bearer",
											"nameLocation": "216:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 115,
											"src": "191:31:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 113,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "191:24:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "210:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Role",
									"nameLocation": "175:4:1",
									"nodeType": "StructDefinition",
									"scope": 211,
									"src": "168:62:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "363:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 125,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "382:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "401:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "393:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 126,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "393:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "393:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "382:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "374:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "374:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "374:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "423:19:1",
															"subExpression": {
																"arguments": [
																	{
																		"id": 135,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 119,
																		"src": "428:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		}
																	},
																	{
																		"id": 136,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 121,
																		"src": "434:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
																			"typeString": "struct Roles.Role storage pointer"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 134,
																	"name": "has",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "424:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$115_storage_ptr_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																	}
																},
																"id": 137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "424:18:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "415:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "415:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "415:28:1"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 141,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "456:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 144,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "461:6:1",
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 114,
															"src": "456:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 145,
														"indexExpression": {
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "456:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "479:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "456:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "456:27:1"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "238:61:1",
										"text": " @dev give an account access to this role"
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "314:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "331:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "318:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 118,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 117,
														"name": "Role",
														"nameLocations": [
															"318:4:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "318:4:1"
													},
													"referencedDeclaration": 115,
													"src": "318:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "345:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "337:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "337:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:36:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:0:1"
									},
									"scope": 211,
									"src": "305:186:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "631:128:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 160,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 156,
																"src": "650:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "669:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 162,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "661:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 161,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "661:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "661:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "650:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 159,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "642:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "642:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "642:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 170,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "695:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	}
																},
																{
																	"id": 171,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "701:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
																		"typeString": "struct Roles.Role storage pointer"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 169,
																"name": "has",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "691:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Role_$115_storage_ptr_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (struct Roles.Role storage pointer,address) view returns (bool)"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "691:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "683:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "683:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "683:27:1"
											},
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 175,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 154,
																"src": "723:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
																	"typeString": "struct Roles.Role storage pointer"
																}
															},
															"id": 178,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "728:6:1",
															"memberName": "bearer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 114,
															"src": "723:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 179,
														"indexExpression": {
															"id": 177,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "735:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "723:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "746:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "723:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "723:28:1"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "499:65:1",
										"text": " @dev remove an account's access to this role"
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "579:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "599:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "586:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 153,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 152,
														"name": "Role",
														"nameLocations": [
															"586:4:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "586:4:1"
													},
													"referencedDeclaration": 115,
													"src": "586:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "613:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "605:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:36:1"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:0:1"
									},
									"scope": 211,
									"src": "570:189:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 209,
										"nodeType": "Block",
										"src": "963:87:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "982:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1001:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "993:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 197,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "993:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "993:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "982:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "974:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "974:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "974:30:1"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 188,
															"src": "1022:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
																"typeString": "struct Roles.Role storage pointer"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1027:6:1",
														"memberName": "bearer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "1022:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 207,
													"indexExpression": {
														"id": 206,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1034:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1022:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 194,
												"id": 208,
												"nodeType": "Return",
												"src": "1015:27:1"
											}
										]
									},
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "767:80:1",
										"text": " @dev check if an account has this role\n @return bool"
									},
									"id": 210,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "has",
									"nameLocation": "862:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "879:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "866:17:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
													"typeString": "struct Roles.Role"
												},
												"typeName": {
													"id": 187,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 186,
														"name": "Role",
														"nameLocations": [
															"866:4:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 115,
														"src": "866:4:1"
													},
													"referencedDeclaration": 115,
													"src": "866:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Role_$115_storage_ptr",
														"typeString": "struct Roles.Role"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "893:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "885:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "865:36:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "952:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "952:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "951:6:1"
									},
									"scope": 211,
									"src": "853:197:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 212,
							"src": "147:906:1",
							"usedErrors": []
						}
					],
					"src": "33:1020:1"
				},
				"id": 1
			},
			"utils/Context.sol": {
				"ast": {
					"absolutePath": "utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							233
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 213,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 214,
								"nodeType": "StructuredDocumentation",
								"src": "62:505:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 233,
							"linearizedBaseContracts": [
								233
							],
							"name": "Context",
							"nameLocation": "587:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "664:36:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 219,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "682:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "686:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "682:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 218,
												"id": 221,
												"nodeType": "Return",
												"src": "675:17:2"
											}
										]
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "611:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "621:2:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "655:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:9:2"
									},
									"scope": 233,
									"src": "602:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "775:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 228,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "793:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "797:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "793:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 227,
												"id": 230,
												"nodeType": "Return",
												"src": "786:15:2"
											}
										]
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "717:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "725:2:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "759:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 225,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "759:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:16:2"
									},
									"scope": 233,
									"src": "708:101:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 234,
							"src": "569:243:2",
							"usedErrors": []
						}
					],
					"src": "35:777:2"
				},
				"id": 2
			}
		}
	}
}